{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js","robots.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","CardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","onSearchChange","e","setState","target","value","state","fetch","response","json","users","this","fRob","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCUCQ,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,mCACA,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,aAAyCK,IAAI,KACrD,sBAAKF,UAAU,aAAf,UACI,6BAAKF,IACL,4BAAIC,aCOLI,EAbE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CAAcX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAA5DS,MAEtB,OACI,8BACKH,KCKEI,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,wCACVY,KAAK,SACLC,YAAY,8BACZC,SAAUH,OCAPI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,SAAzC,SACKH,EAAMI,aC0CJC,E,kDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAaa,EAAEE,OAAOC,SAbrC,EAAKC,MAAQ,CACTvB,OAAQ,GACRM,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CAEDtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACpB,OAAQ2B,S,oBAM9C,WACI,MAA8BC,KAAKL,MAA5BvB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACLuB,EAAO7B,EAAO8B,QAAO,SAAAC,GAC3B,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS3B,EAAY0B,kBAEzD,OAAKhC,EAAOkC,OAIJ,sBAAKtC,UAAU,KAAf,UACI,iDACA,cAAC,EAAD,CAAWW,aAAcqB,KAAKV,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ6B,SAPvB,oBAAIjC,UAAU,KAAd,yB,GAzBDuC,aCElBC,IAASC,OACH,cAAC,EAAD,CAAKrC,OCTW,CAClB,CACIP,GAAI,EACJC,KAAM,QACNC,MAAO,mBAEX,CACIF,GAAI,EACJC,KAAM,KACNC,MAAO,gBAEX,CACIF,GAAI,EACJC,KAAM,MACNC,MAAO,iBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAGX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAEX,CACIF,GAAI,EACJC,KAAM,OACNC,MAAO,kBAEX,CACIF,GAAI,GACJC,KAAM,OACNC,MAAO,qBDxCT2C,SAASC,eAAe,SAM9BxD,M","file":"static/js/main.4601a6b7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n\n    return (\n        <>\n        <div className='bg-navy dib br3 pa3 ma2 grow bw2 shadow-5 tc'> \n            <img src={`https://robohash.org/${id}?set=set3`} alt='' />\n            <div className='light-gray'>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default Card;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const getRand = () => {\n//     const len = [0,1,2,3,4,5,6,7,8,9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n//     return Math.floor(Math.random() * len.length) + 10\n// }\n\n\n    // const rand = getRand();","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n    const CardArray = robots.map((user, i) => {\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n    })\n    return (\n        <div>\n            {CardArray}\n        </div>\n    );\n}\n\n\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba4 b--blue bg-lightest-blue w-25'\n            type='search' \n            placeholder='Search your favorit monster'\n            onChange={searchChange} />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', height: '900px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){ \n        fetch('https://jsonplaceholder.typicode.com/users')\n        //fetch('https://randomuser.me/api/')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}));\n    }\n    onSearchChange = (e) => {\n        this.setState({searchfield: e.target.value});\n    }\n\n    render() {\n        const {robots, searchfield} = this.state;\n            const fRob = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if (!robots.length) {\n            return <h1 className='tc'>Loading</h1>\n        } else {\n            return (\n                <div className='tc'>\n                    <h1> Robo Monsters </h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <CardList robots={fRob} /> \n                    </Scroll>\n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {robots} from './robots'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App'\n\nReactDOM.render(\n      <App robots={robots}/>,\n      document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const robots = [\n    {\n        id: 1,\n        name: 'kento',\n        email: 'kento@gmail.com',\n    },\n    {\n        id: 2,\n        name: 'ko',\n        email: 'ko@gmail.com',\n    },\n    {\n        id: 3,\n        name: 'ken',\n        email: 'ken@gmail.com',\n    },\n    {\n        id: 4,\n        name: 'keto',\n        email: 'keto@gmail.com',\n    },\n    {\n        id: 5,\n        name: 'tokk',\n        email: 'tokk@gmail.com',\n    },\n\n    {\n        id: 6,\n        name: 'boto',\n        email: 'boto@gmail.com',\n    },\n    {\n        id: 7,\n        name: 'dodo',\n        email: 'dodo@gmail.com',\n    },\n    {\n        id: 8,\n        name: 'lobo',\n        email: 'lobo@gmail.com',\n    },\n    {\n        id: 9,\n        name: 'toro',\n        email: 'toro@gmail.com',\n    },\n    {\n        id: 10,\n        name: 'koto',\n        email: 'koto@gmail.com',\n    }\n]"],"sourceRoot":""}